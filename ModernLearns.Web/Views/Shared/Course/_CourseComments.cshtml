@model ModernLearns.Core.DTOs.Course.CourseCommentViewModel
@using ModernLearns.Core.Convertors
@using System.Text.Encodings.Web
@using System.Text.Unicode;

@if (User.Identity.IsAuthenticated)
{
    <div class="top">
        <form id="comments-form" class="send-Comment">
            <input name="replay" id="reply-comment-id" type="hidden" value="null">
            <div class="form-group">
                <div class="input-group mb-3 col-md-12 pull-left">
                    <textarea type="text" class="form-control" placeholder="نظر خود را وارد کنید"
                              onfocus="this.placeholder = ''"
                              onblur="this.placeholder = 'نظر ارزشمند خود را وارد کنید'"
                              id="comment_text" name="comment_text">
</textarea>
                </div>
            </div>
            <div class="input-group-append">
                <button class="btn btn_2" type="submit">ارسال نظر ارزشمند شما</button>
            </div>
        </form>
        <div id="response"></div>
    </div>
}
else
{
    <div class="alert alert-warning rtl-text">
        برای افزودن کامنت لطفاٌ ابتدا <a href="/Login">وارد</a> سایت شوید!
    </div>
}

<div class="list-comment">
    @foreach (var comment in Model.CourseComments)
    {
        <div class="commetn-box">
            <img src="/img/userAvatar/@comment.User.UserAvatar" alt="userAvatar">
            <span>ارسال شده در: @comment.CreateDate.ToShamsi()</span>
            <h3>توسط: @comment.User.UserName</h3>
            <p>
                @System.Text.Encodings.Web.HtmlEncoder.Create(allowedRanges: new[] { UnicodeRanges.Arabic, UnicodeRanges.BasicLatin }).Encode(comment.Comment)
            </p>
            <div class="action-layer">
                <a onclick="DeleteComment(@comment.CommentId)" class="delete-cm"><i class="zmdi zmdi-delete"></i></a>
                <a onclick="replyComment(@comment.CommentId)" class="edit-cm"><i class="zmdi zmdi-edit"></i></a>
                <!-- set comment id for element's id for reply -->
                <a href="javascript:void(0)" onclick="replyComment(@comment.CommentId)" class="reply-cm" id="cm-3">
                    <i class="zmdi zmdi-mail-reply"></i>
                </a>
            </div>
        </div>
        @if (Model.AnswerComments.Any(a => a.Answer == comment.CommentId))
        {
            foreach (var answer in Model.AnswerComments.Where(a => a.Answer == comment.CommentId))
            {
                <div class="answer-box">
                    <img src="/img/userAvatar/@answer.User.UserAvatar" alt="userAvatar">
                    <span>ارسال شده در: @answer.CreateDate.ToShamsi()</span>
                    <h3>توسط:@answer.User.UserName</h3>
                    <p>
                        @System.Text.Encodings.Web.HtmlEncoder.Create(allowedRanges: new[] { UnicodeRanges.Arabic, UnicodeRanges.BasicLatin }).Encode(answer.Comment)
                    </p>
                    <div class="action-layer">
                        <a onclick="DeleteComment(@answer.CommentId)" class="delete-cm"><i class="zmdi zmdi-delete"></i></a>
                        <a href="" class="edit-cm"><i class="zmdi zmdi-edit"></i></a>
                        <!-- set comment id for element's id for reply -->
                        <a href="javascript:void(0)" onclick="replyComment(@comment.CommentId)" class="reply-cm" id="cm-3">
                            <i class="zmdi zmdi-mail-reply"></i>
                        </a>
                    </div>
                </div>
            }
        }
    }

    <!--pagign-->
    @if (Model.PageCount > 1)
    {
        <div class="row align-items-center padding_top">
            <ul class="pagination pg-amber">
                <!--Arrow left-->
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a onclick="ChangePage(@(Model.CurrentPage-1))" class="page-link waves-effect" aria-label="Previous">
                            <span aria-hidden="true">«</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                }


                <!--Numbers-->
                @for (var i = Model.StartPage; i <= Model.EndPage; i++)
                {

                    <li class="@((i==Model.CurrentPage)? "page-item active" : "page-item")"><a onclick="ChangePage(@i)" class="page-link waves-effect">@i</a></li>
                }

                <!--Arrow right-->
                @if (Model.CurrentPage >= 1 && Model.PageCount > Model.CurrentPage)
                {
                    <li class="page-item">
                        <a onclick="ChangePage(@(Model.CurrentPage+1))" class="page-link waves-effect" aria-label="Next">
                            <span aria-hidden="true">»</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                }

            </ul>
        </div>
    }
</div>